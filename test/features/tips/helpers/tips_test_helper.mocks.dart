// Mocks generated by Mockito 5.4.2 from annotations
// in template_clean_architecture/test/features/tips/helpers/tips_test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i3;
import 'package:template_clean_architecture/core/error/error.dart' as _i6;
import 'package:template_clean_architecture/features/tips/data/datasources/remote/tips_api_service.dart'
    as _i8;
import 'package:template_clean_architecture/features/tips/data/models/models.dart'
    as _i9;
import 'package:template_clean_architecture/features/tips/domain/entities/tips_entities.dart'
    as _i7;
import 'package:template_clean_architecture/features/tips/domain/repositories/repositories.dart'
    as _i4;
import 'package:template_clean_architecture/features/tips/domain/usecases/get_tips_usecase.dart'
    as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpResponse_1<T> extends _i1.SmartFake
    implements _i3.HttpResponse<T> {
  _FakeHttpResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TipsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTipsRepository extends _i1.Mock implements _i4.TipsRepository {
  MockTipsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.TipsEntity>> getTips() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTips,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.TipsEntity>>.value(
            _FakeEither_0<_i6.Failure, _i7.TipsEntity>(
          this,
          Invocation.method(
            #getTips,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i7.TipsEntity>>);
}

/// A class which mocks [TipsServiceRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockTipsServiceRemote extends _i1.Mock implements _i8.TipsServiceRemote {
  MockTipsServiceRemote() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.HttpResponse<_i9.TipsResponse>> getTips({
    String? token,
    String? contentType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTips,
          [],
          {
            #token: token,
            #contentType: contentType,
          },
        ),
        returnValue: _i5.Future<_i3.HttpResponse<_i9.TipsResponse>>.value(
            _FakeHttpResponse_1<_i9.TipsResponse>(
          this,
          Invocation.method(
            #getTips,
            [],
            {
              #token: token,
              #contentType: contentType,
            },
          ),
        )),
      ) as _i5.Future<_i3.HttpResponse<_i9.TipsResponse>>);
}

/// A class which mocks [GetTipsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTipsUseCase extends _i1.Mock implements _i10.GetTipsUseCase {
  MockGetTipsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.TipsEntity>> call({dynamic params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.TipsEntity>>.value(
            _FakeEither_0<_i6.Failure, _i7.TipsEntity>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i7.TipsEntity>>);
}
